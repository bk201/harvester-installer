#!/usr/bin/env bash
set -euf -o pipefail

function usage()
{
    cat <<HELP
USAGE:
    harvester-configure-network INTERFACE dhcp
    harvester-configure-network INTERFACE static IP NETMASK GATEWAY NAMESERVERS
HELP
}

if [ $# -lt 2 ]; then
    usage
    exit 1
fi

INTERFACE=$1
MODE=$2
NAMESERVERS=""
if [ "${MODE}" == "static" ]; then
  if [ $# -lt 6 ]; then
    usage
    exit 1
  fi
  IP=$3
  NETMASK=$4
  GATEWAY=$5
  shift 5
  NAMESERVERS=$*
fi

function write_log()
{
    local message="${1}"
    logger -t "harvester-configure-network" "${message}"
    echo "${message}"
}

function configure_network()
{
    IFCFG_FILE=/etc/sysconfig/network/ifcfg-${INTERFACE}
    IFROUTE_FILE=/etc/sysconfig/network/ifroute-${INTERFACE}

    if [ "${MODE}" == "static" ]; then
      # Static
      write_log "Config ipv4 static ${INTERFACE}: address ${IP} mask ${NETMASK} gw ${GATEWAY} nameservers ${NAMESERVERS}"
      cat > ${IFCFG_FILE} << EOF
BOOTPROTO=static
STARTMODE=onboot
IPADDR=${IP}
NETMASK=${NETMASK}
EOF
      cat > ${IFROUTE_FILE} << EOF
default ${GATEWAY} - ${INTERFACE}
EOF
    else
      # DHCP
      write_log "Config ipv4 dhcp ${INTERFACE}"
      cat > ${IFCFG_FILE} << EOF
BOOTPROTO=dhcp
STARTMODE=onboot
EOF
      rm -f ${IFROUTE_FILE}
    fi

    wicked ifreload ${INTERFACE}

    # create a YIP config to setup DNS server
    if [ "${MODE}" == "static" -a -n "${NAMESERVERS}" ]; then
      args=""
      i=0
      for ns in ${NAMESERVERS}; do
        args+=" stages.live[0].dns.nameservers[${i}]=${ns}"
        let i=i+1
      done

      yip -s live -d "${args}"
    fi
}

configure_network
